buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.netflix.nebula:gradle-ospackage-plugin:3.4.0'
	}
}

if (tasks.findByPath("artifactoryPublish")) {
	artifactory {
		publish {
			repository {
				ivy {
					artifactLayout = '[organization]/[revision]/spring-cloud-dataflow-server-yarn-[revision]-[classifier].[ext]'
				}
			}
		}
	}
}

configure(allprojects) {
	repositories {
		maven { url "https://repo.springsource.org/libs-snapshot" }
		maven { url "https://repo.springsource.org/libs-milestone" }
		maven { url "https://repo.springsource.org/libs-release" }
	}
	group = 'scdf'
}

configure(subprojects) { subproject ->
	apply plugin: 'nebula.ospackage'
	buildDeb.enabled = false

	configurations {
		rpm
	}

	dependencies {
		rpm "org.springframework.cloud.dist:spring-cloud-dataflow-server-yarn-dist:$springCloudDataflowYarnVersion@zip"
	}

	task explodeDist(type: Copy) {
		from(zipTree(configurations.rpm.singleFile))
		into file("${buildDir}/unpacked/dist")
	}

	ospackage {
		release = "${rootProject.release}"
		arch = NOARCH
		os = LINUX
		user 'dataflow'
		permissionGroup = 'pivotal'
		packageDescription = 'Spring Cloud Dataflow Service.'
		packageGroup = 'Applications/Databases'
		license = 'Apache License v2.0'
		preInstall file("${rootProject.projectDir}/src/main/package/rpm/preinstall.sh")
		postUninstall file("${rootProject.projectDir}/src/main/package/rpm/postuninstall.sh")


		link('/opt/pivotal/dataflow', "/opt/pivotal/spring-cloud-dataflow-server-yarn-$springCloudDataflowYarnVersion")
		link('/usr/bin/dataflow-shell', '/opt/pivotal/dataflow-shell')
		link('/usr/bin/dataflow-server-yarn-cli', '/opt/pivotal/dataflow-server-yarn-cli')
	}

	artifacts {
		archives buildRpm {
			classifier "${rootProject.release}.noarch"
		}
	}
}

project('noarch') {
	buildRpm.dependsOn explodeDist
	buildRpm {
		packageName = 'spring-cloud-dataflow-server-yarn'
		from("${buildDir}/unpacked/dist") {
			into '/opt/pivotal'
		}
		from("src/main/resources") {
			into '/opt/pivotal'
			fileMode 0755
		}
	}
}

